<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<bean id="simpleUrlMapping"-->
    <!--class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
    <!--<property name="mappings">-->
    <!--<props>-->
    <!--<prop key="/userList">simpleController</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"-->
    <!--p:templateLoaderPath="/WEB-INF/ftl"-->
    <!--p:defaultEncoding="UTF-8"-->

    <!--&gt;-->

    <!--<property name="freemarkerSettings">-->
    <!--<props>-->
    <!--<prop key="classic_compatible">true</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 &ndash;&gt;-->
    <!-- 会去父容器中查找对应的aop advice-->
    <context:component-scan base-package="com.jessin.practice.controller">
    </context:component-scan>


    <!-- 强制使用CGLIB动态代理 -->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!--<util:properties id="config" location="classpath:test1.properties" />-->
    <!--&lt;!&ndash; properties文件放在mvc里面，@Value("${name}")才能起作用&ndash;&gt;-->


    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"-->
    <!--p:order="5"-->
    <!--p:suffix=".ftl"-->
    <!--p:contentType="text/html; charset=utf-8"-->
    <!--/>-->
    <!--&lt;!&ndash; 配置视图解析器，将ModelAndView及字符串解析为具体的页面，即逻辑视图名转化为/WEB-INF/views/逻辑视图名.jsp &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"-->
    <!--p:viewClass="org.springframework.web.servlet.view.JstlView"-->
    <!--p:prefix="/WEB-INF/views/"-->
    <!--p:suffix=".jsp"-->
    <!--/>-->

    <!--</bean>-->
    <!-- TODO 这种情况有两个RequestMappingHandlerAdapter，
    使用的是第一种，使用的是内置的RequestMappingHandlerAdapter
     -->
    <!-- TODO 这个conversionService会在参数绑定中使用 -->
    <mvc:annotation-driven conversion-service="conversionService">
        <!-- 这里是添加，其实已经有了这个converter，但是位于列表的最后，这里再加一个相同的，但是放在前面 -->
        <!--　不注入默认值 -->
        <!--<mvc:message-converters register-defaults="false">-->
        <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--</bean>-->
        <!--</mvc:message-converters>-->
        <!-- default-timeout默认为空串，必须设置，指定线程池运行超时时间，单位毫秒-->
        <mvc:async-support task-executor="executor" default-timeout="3000"/>
    </mvc:annotation-driven>

    <!--完成JSON格式数据的自动转换-->
    <!-- 默认beanName为类全名#0 -->
    <!-- order = -1表示排到最前面，将会生效-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
        <!--<property name="order" value="-1"></property>-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                    <!--<property name="objectMapper">-->
                        <!--<bean class="com.fasterxml.jackson.databind.ObjectMapper">-->
                            <!--<property name="serializationInclusion">-->
                                <!--<value type="com.fasterxml.jackson.annotation.JsonInclude$Include">NON_NULL</value>-->
                            <!--</property>-->
                        <!--</bean>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter">-->


    <!-- PropertyPlaceholderConfigurer是一个BeanFactoryPostProcessor，只在该容器中起作用，不可继承-->
    <context:property-placeholder location="classpath*:/test.properties"/>

</beans>
